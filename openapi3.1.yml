openapi: 3.1.0
info:
  title: OpenOCR
  description: OpenOCR is a wrapper around Tesseract easily deployable as a service
  contact:
    name: xf0e
    email: droidlove@ya.ru
  version: '1.8.1'
jsonSchemaDialect: https://json-schema.org/draft/2020-12/schema
servers:
- url: https://localhost:8080/
  variables: {}
- url: http://localhost:8080/
  variables: {}
paths:
  /ocr:
    post:
      tags:
      - ocr
      summary: addOCR
      description: Place a new OCR request
      operationId: addOCR
      parameters: []
      requestBody:
        description: Pass image url and other info to decode image to text via OCR
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DecodeOCR1'
        required: true
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Invalid input
          headers: {}
          content:
            text/plain:
              schema:
                pattern: ^[a-zA-Z0-9]{27}$
                type: string
                contentMediaType: text/plain
        '503':
          description: Service Unavailable
          headers: {}
          content:
            text/plain:
              schema:
                pattern: ^[a-zA-Z0-9]{27}$
                type: string
                contentMediaType: text/plain
      deprecated: false
    parameters: []
  /ocr-status:
    post:
      tags:
      - ocr-status
      summary: ocr-status
      description: returns status of given request, submit id
      operationId: ocr-status
      parameters: []
      requestBody:
        description: Pass request id to get the status of that request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OCRStatus'
        required: true
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: client error
          headers: {}
          content:
            text/plain:
              schema:
                pattern: ^[a-zA-Z0-9]{27}$
                type: string
                contentMediaType: text/plain
        '500':
          description: internal server error
          headers: {}
          content:
            text/plain:
              schema:
                pattern: ^[a-zA-Z0-9]{27}$
                type: string
                contentMediaType: text/plain
      deprecated: false
    parameters: []
components:
  schemas:
    DecodeOCR:
      title: DecodeOCR
      required:
      - engine
      type: object
      properties:
        deffered:
          type: boolean
          description: if set (default is false) the connection will be reset after request is placed. The client have to either set reply_to or poll to on /orc-status get the request.
          default: false
        reply_to:
          maxLength: 200
          minLength: 5
          type: string
          description: if set the Server will deliver the result to the given adress
          examples:
          - http://localhost:8888/postback-ocr
        engine:
          type: string
        preprocessors:
          type: array
          items:
            maxLength: 20
            minLength: 3
            type: string
          description: can have one ore more values. all preprocessors will run in a chain before ocr is performed. Currenly only convert-pdf can be used if engine is tesseract.
      discriminator:
        propertyName: engine
    sandwichengine:
      title: sandwichengine
      allOf:
      - $ref: '#/components/schemas/DecodeOCR2'
      - type: object
        properties:
          doc_type:
            maxLength: 30
            minLength: 5
            type: string
            description: the service can prioritise some document types if the admin has configured document types priorities.
          page_number:
            minimum: 1
            type: integer
            description: only used for logging now
            contentEncoding: int32
          time_out:
            minimum: 10
            type: integer
            description: You can set the maximum processing time for a particular request. If timeout has been reached prior finisching request the service will stop processing
            contentEncoding: int32
          user_agent:
            maxLength: 100
            minLength: 3
            type: string
            description: please always set the user-agent for loggin purposes
          reference_id:
            maxLength: 100
            minLength: 3
            type: string
            description: please always set the reference ID (e.g. Internal job ID)
          engine_args:
            $ref: '#/components/schemas/EngineArgs'
    tesseractengine:
      title: tesseractengine
      allOf:
      - $ref: '#/components/schemas/DecodeOCR2'
      - type: object
        properties:
          inplace_decode:
            type: boolean
            description: If true, will attempt to do ocr decode in-place rather than queuing a message on RabbitMQ for worker processing.  Useful for local testing, not recommended for production.
            default: false
          engine_args:
            $ref: '#/components/schemas/EngineArgs1'
    imageBase64:
      title: imageBase64
      required:
      - img_base64
      type: object
      properties:
        img_base64:
          minLength: 5
          type: string
          description: Base64 encoded document to process
    imageURL:
      title: imageURL
      required:
      - img_url
      type: object
      properties:
        img_url:
          maxLength: 200
          minLength: 5
          type: string
          description: The URL of the image or the pdf to process. If set, ocr server will try to download the image
    ApiResponse:
      title: ApiResponse
      required:
      - text
      - id
      - status
      type: object
      properties:
        text:
          type: string
          description: Contains either the OCR-Result of the error message if field status is set to error. Text can contain a plain text or a base64 encoded file. It depends on the parameter ocr_type at placing request
        id:
          maxLength: 27
          minLength: 27
          pattern: ^[a-zA-Z0-9]{27}$
          type: string
          description: K-Sortable Unique IDentifier
          examples:
          - 1sDRnIKpJSijZaMXmXoCqQVc32N
        status:
          $ref: '#/components/schemas/Status'
    OCRStatus:
      title: OCRStatus
      required:
      - img_url
      type: object
      properties:
        img_url:
          maxLength: 27
          minLength: 27
          pattern: ^[a-zA-Z0-9]{27}$
          type: string
          description: The ID of the Request, ID is K-Sortable Unique IDentifier
          examples:
          - 26EaJxRYY2njljk9kLhTMSCGgeI
      description: status of request to given ID
    DecodeOCR2:
      title: DecodeOCR2
      required:
      - engine
      type: object
      properties:
        engine:
          type: string
      discriminator:
        propertyName: engine
        mapping:
          sandwich: sandwichengine
          tesseract: tesseractengine
    EngineArgs:
      title: EngineArgs
      type: object
      properties:
        ocr_type:
          $ref: '#/components/schemas/OcrType'
        result_optimize:
          type: boolean
          description: If set the resulting pdf will be delivered with pdf 1.7 specification and the resolution at 300 x 300 (prepress settings of gs)
          default: false
        config_vars:
          maxLength: 100
          minLength: 3
          type: string
          description: Config vars - equivalent of -c args to tesseract
        psm:
          $ref: '#/components/schemas/Psm'
        lang:
          $ref: '#/components/schemas/Lang'
      description: The OCR engine arguments to pass (engine-specific)
    EngineArgs1:
      title: EngineArgs1
      type: object
      properties:
        config_vars:
          maxLength: 100
          minLength: 3
          type: string
          description: Config vars - equivalent of -c args to tesseract
        psm:
          $ref: '#/components/schemas/Psm'
        lang:
          $ref: '#/components/schemas/Lang'
      description: The OCR engine arguments to pass (engine-specific)
    Lang:
      title: Lang
      enum:
      - eng
      - ara
      - bel
      - ben
      - bul
      - ces
      - dan
      - deu
      - ell
      - fin
      - fra
      - heb
      - hin
      - ind
      - isl
      - ita
      - jpn
      - kor
      - nld
      - nor
      - pol
      - por
      - ron
      - rus
      - spa
      - swe
      - tha
      - tur
      - ukr
      - vie
      - chi-sim
      - chi-tra
      type: string
      description: The language to use. If omitted, will use English
      examples:
      - eng
    OcrType:
      title: OcrType
      enum:
      - txt
      - combinedpdf
      - ocrlayeronly
      type: string
      description: txt will return text, combinedpdf will return original pdf with ocr layer, if ocrlayeronly is set the service will return a pdf with orc layer (in pdf viewer the text is invisible, but searchable). All values will return base64 encoded value except for an erroneuous request. In this case the service will terurn the same object but the key text will contain human error
      examples:
      - txt
    Psm:
      title: Psm
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      - 8
      - 9
      - 10
      type: integer
      description: Page Segment Mode, equivalent of -psm arg to tesseract.  To use default, omit this field from the JSON.
      examples:
      - 0
    Status:
      title: Status
      enum:
      - done
      - error
      - not found
      - processing
      type: string
      description: can be error, not found, processing or done
      examples:
      - done
    DecodeOCR1:
      oneOf:
      - oneOf:
        - $ref: '#/components/schemas/imageBase64'
        - $ref: '#/components/schemas/imageURL'
      - oneOf:
        - $ref: '#/components/schemas/imageBase64'
        - $ref: '#/components/schemas/imageURL'
      discriminator:
        propertyName: engine
        mapping:
          sandwich: sandwichengine
          tesseract: tesseractengine
    sandwich engine1:
      oneOf:
      - $ref: '#/components/schemas/imageBase64'
      - $ref: '#/components/schemas/imageURL'
    tesseract engine1:
      oneOf:
      - $ref: '#/components/schemas/imageBase64'
      - $ref: '#/components/schemas/imageURL'
tags:
- name: OpenOCR
  description: Service wrapper around Tesseract
  externalDocs:
    description: Find out more
    url: https://github.com/xf0e/open-ocr
- name: ocr
  description: ''
- name: ocr-status
  description: ''
